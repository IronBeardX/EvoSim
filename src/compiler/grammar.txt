[lexer]

literals:
    + - * / % ( ) ^ @ < > { } = ,

reserved:
    OR AND NOT TRUE FALSE WORLD WIDTH HEIGHT INFINITE DEFAULT AT SIZE TERRAIN
    SIMULATION EPISODES STOP MAX_ROUNDS IF ELSE GENE HEALTH HUNGER LEGS EYES ARMS 
    HORNS SMELL FINS NOSE MOUTH VALUE IN MUTATION CHANCE STEP LOOP CONTINUE BREAK
    FUNC RETURN

tokens:
    INTDIV EQ NEQ GE LE NUMBER ID


[parser]

stmt_list =>
    stmt newline stmt_list
    epsilon

stmt =>
    if_stmt
    var_stmt
    loop_stmt
    CONTINUE
    BREAK
    ret_stmt


var_stmt =>
    ID = disjunction


func_stmt =>
    FUNC ID = param_list { maybe_nl stmt_list }

param_list =>
    ID param_list
    epsilon

ret_stmt =>
    RETURN disjunction
    RETURN epsilon


loop_stmt =>
    LOOP loop_init , loop_condition , loop_set { maybe_nl stmt_list }

loop_condition =>
    disjunction
    epsilon

loop_init =>
    var_stmt
    epsilon

loop_set =>
    var_stmt
    epsilon


if_stmt =>
    IF disjunction { maybe_nl stmt_list } else_stmt

else_stmt =>
    ELSE if_stmt
    ELSE { maybe_nl stmt_list }
    epsilon


maybe_nl =>
    newline
    epsilon


gene_stmt =>
    GENE phygene_stmt

phygene_stmt =>
    phygene { maybe_nl phygeneprop_list }

phygene =>
    HEALTH
    HUNGER
    LEGS
    EYES
    ARMS
    HORNS
    SMELL
    FINS
    NOSE
    MOUTH

phygeneprop_list =>
    phygeneprop maybe_nl phygeneprop_list
    epsilon

phygeneprop =>
    VALUE NUMBER IN { NUMBER NUMBER }
    MUTATION { maybe_nl mutationprop maybe_nl mutationprop maybe_nl }

mutationprop =>
    CHANCE NUMBER
    STEP NUMBER


sim_stmt =>
    SIMULATION => { maybe_nl simprop maybe_nl simprop maybe_nl simprop maybe_nl }

simprop =>
    EPISODES NUMBER
    MAX_ROUNDS NUMBER
    STOP IF disjunction


world_stmt =>
    WORLD { maybe_nl worldprop maybe_nl worldprop maybe_nl }

worldprop =>
    SIZE worldsize
    TERRAIN worldterrain

worldsize =>
    INFINITE
    { maybe_nl WIDTH NUMBER maybe_nl HEIGHT NUMBER maybe_nl } 

worldterrain =>
    { maybe_nl terrainprop_list }

terrainprop_list =>
    terrainprop maybe_nl terrainprop_list
    epsilon

terrainprop =>
    DEFAULT ID
    ID AT { maybe_nl NUMBER maybe_nl terrainposn_list }
    ID

terrainposn_list =>
    NUMBER maybe_nl terrainposn_list
    epsilon


disjunction =>
    conjunction OR conjunction
    conjunction

conjunction =>
    negation AND negation
    negation

negation =>
    NOT comparison
    comparison


comparison =>
    expr EQ expr
    expr NEQ expr
    expr GE expr
    expr LE expr
    expr < expr
    expr > expr
    expr


expr =>
    expr + term
    expr - term
    term

term =>
    term * factor
    term / factor
    term % factor
    term INTDIV factor
    factor

factor =>
    - factor
    power

power =>
    atom ^ factor
    atom @ factor
    atom

atom =>
    NUMBER
    TRUE
    FALSE
    ID
    ID ( arg_list )
    ( expr )

arg_list =>
    disjunction rest_args
    epsilon

rest_args =>
    , disjunction rest_args
    epsilon

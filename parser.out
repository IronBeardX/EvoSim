Created by PLY (http://www.dabeaz.com/ply)

Unused terminals:

    newline

Grammar

Rule 0     S' -> test
Rule 1     program -> gene_stmt_list dna_stmt_list behavior_stmt_list entity_org_stmt_list world_stmt sim_stmt
Rule 2     epsilon -> <empty>
Rule 3     test -> world_stmt
Rule 4     gene_stmt_list -> gene_stmt gene_stmt_list
Rule 5     gene_stmt_list -> epsilon
Rule 6     gene_stmt -> GENE phygene_stmt
Rule 7     gene_stmt -> GENE percpgene
Rule 8     gene_stmt -> GENE actgene_stmt
Rule 9     percpgene -> SMELLING
Rule 10    percpgene -> VISION
Rule 11    actgene_stmt -> actgene ID { COST NUMBER }
Rule 12    actgene -> MOVE
Rule 13    actgene -> EAT
Rule 14    actgene -> REPRODUCE
Rule 15    actgene -> ATTACK
Rule 16    actgene -> DEFEND
Rule 17    actgene -> PICK
Rule 18    actgene -> SWIM
Rule 19    phygene_stmt -> phygene ID { phygeneprop phygeneprop }
Rule 20    phygene -> HEALTH
Rule 21    phygene -> HUNGER
Rule 22    phygene -> LEGS
Rule 23    phygene -> EYES
Rule 24    phygene -> ARMS
Rule 25    phygene -> HORNS
Rule 26    phygene -> SMELL
Rule 27    phygene -> FINS
Rule 28    phygene -> NOSE
Rule 29    phygene -> MOUTH
Rule 30    phygeneprop -> VALUE NUMBER IN { NUMBER NUMBER }
Rule 31    phygeneprop -> MUTATION { mutationprop mutationprop }
Rule 32    mutationprop -> CHANCE NUMBER
Rule 33    mutationprop -> STEP NUMBER
Rule 34    dna_stmt_list -> dna_stmt dna_stmt_list
Rule 35    dna_stmt_list -> epsilon
Rule 36    dna_stmt -> DNA ID { dna_elem_list }
Rule 37    dna_elem_list -> dna_elem dna_elem_list
Rule 38    dna_elem_list -> epsilon
Rule 39    dna_elem -> percpgene
Rule 40    dna_elem -> ID
Rule 41    dna_elem -> DNA ID
Rule 42    behavior_stmt_list -> behavior_stmt behavior_stmt_list
Rule 43    behavior_stmt_list -> epsilon
Rule 44    behavior_stmt -> BEHAVIOR ID { func_stmt_list decide_stmt }
Rule 45    decide_stmt -> DECIDE ORGANISM TIME { stmt_list }
Rule 46    entity_org_stmt_list -> entity_stmt entity_org_stmt_list
Rule 47    entity_org_stmt_list -> organism_stmt entity_org_stmt_list
Rule 48    entity_org_stmt_list -> epsilon
Rule 49    entity_stmt -> ENTITY { entityprop entityprop }
Rule 50    entityprop -> COEXISTENCE bool
Rule 51    entityprop -> REPR ID
Rule 52    organism_stmt -> ORGANISM { orgprop orgprop orgprop }
Rule 53    orgprop -> DNA ID
Rule 54    orgprop -> BEHAVIOR ID
Rule 55    orgprop -> REPR ID
Rule 56    world_stmt -> WORLD { worldprop worldprop }
Rule 57    worldprop -> SIZE worldsize
Rule 58    worldprop -> TERRAIN worldterrain
Rule 59    worldsize -> INFINITE { worldsizeprop worldsizeprop }
Rule 60    worldsize -> { worldsizeprop worldsizeprop }
Rule 61    worldsizeprop -> WIDTH NUMBER
Rule 62    worldsizeprop -> HEIGHT NUMBER
Rule 63    worldterrain -> { terrainprop_list }
Rule 64    terrainprop_list -> terrainprop terrainprop_list
Rule 65    terrainprop_list -> epsilon
Rule 66    terrainprop -> ID
Rule 67    terrainprop -> DEFAULT ID
Rule 68    terrainprop -> ID AT { NUMBER terrainposn_list }
Rule 69    terrainposn_list -> NUMBER terrainposn_list
Rule 70    terrainposn_list -> epsilon
Rule 71    sim_stmt -> SIMULATION { simprop simprop simprop simprop simprop }
Rule 72    simprop -> EPISODES NUMBER
Rule 73    simprop -> MAX_ROUNDS NUMBER
Rule 74    simprop -> ACTIONS_TIME NUMBER
Rule 75    simprop -> STOP SIMULATION { stmt_list }
Rule 76    simprop -> AVAILABLE_COMMANDS { command_list }
Rule 77    command_list -> ID command_list
Rule 78    command_list -> epsilon
Rule 79    func_stmt_list -> func_stmt func_stmt_list
Rule 80    func_stmt_list -> epsilon
Rule 81    func_stmt -> FUNC ID = param_list { stmt_list }
Rule 82    param_list -> ID param_list
Rule 83    param_list -> epsilon
Rule 84    stmt_list -> stmt stmt_list
Rule 85    stmt_list -> epsilon
Rule 86    stmt -> if_stmt
Rule 87    stmt -> var_stmt ;
Rule 88    stmt -> index_stmt ;
Rule 89    stmt -> loop_stmt
Rule 90    stmt -> CONTINUE ;
Rule 91    stmt -> BREAK ;
Rule 92    stmt -> RETURN disjunction ;
Rule 93    stmt -> RETURN ;
Rule 94    var_stmt -> accessing = disjunction
Rule 95    index_stmt -> naming [ disjunction ] = disjunction
Rule 96    if_stmt -> IF disjunction { stmt_list } else_stmt
Rule 97    else_stmt -> ELSE if_stmt
Rule 98    else_stmt -> ELSE { stmt_list }
Rule 99    else_stmt -> epsilon
Rule 100   loop_stmt -> LOOP loop_init , loop_condition , loop_set { stmt_list }
Rule 101   loop_init -> var_stmt
Rule 102   loop_init -> epsilon
Rule 103   loop_set -> var_stmt
Rule 104   loop_set -> epsilon
Rule 105   loop_condition -> disjunction
Rule 106   loop_condition -> epsilon
Rule 107   disjunction -> conjunction OR conjunction
Rule 108   disjunction -> conjunction
Rule 109   conjunction -> negation AND negation
Rule 110   conjunction -> negation
Rule 111   negation -> NOT comparison
Rule 112   negation -> comparison
Rule 113   comparison -> expr EQ expr
Rule 114   comparison -> expr NEQ expr
Rule 115   comparison -> expr GE expr
Rule 116   comparison -> expr LE expr
Rule 117   comparison -> expr > expr
Rule 118   comparison -> expr < expr
Rule 119   comparison -> expr
Rule 120   expr -> expr + term
Rule 121   expr -> expr - term
Rule 122   expr -> term
Rule 123   term -> term * factor
Rule 124   term -> term / factor
Rule 125   term -> term % factor
Rule 126   term -> term INTDIV factor
Rule 127   term -> factor
Rule 128   factor -> - factor
Rule 129   factor -> power
Rule 130   power -> atom ^ factor
Rule 131   power -> atom @ factor
Rule 132   power -> naming
Rule 133   naming -> naming [ disjunction ]
Rule 134   naming -> accessing
Rule 135   naming -> ID ( arg_list )
Rule 136   naming -> atom
Rule 137   atom -> NUMBER
Rule 138   atom -> STRING
Rule 139   atom -> bool
Rule 140   atom -> ( expr )
Rule 141   atom -> [ arg_list ]
Rule 142   atom -> { keyarg_list }
Rule 143   accessing -> word
Rule 144   accessing -> word . accessing
Rule 145   word -> ID
Rule 146   word -> ORGANISM
Rule 147   word -> SIMULATION
Rule 148   bool -> TRUE
Rule 149   bool -> FALSE
Rule 150   arg_list -> disjunction
Rule 151   arg_list -> disjunction , arg_list
Rule 152   arg_list -> epsilon
Rule 153   keyarg_list -> keyarg
Rule 154   keyarg_list -> keyarg , keyarg_list
Rule 155   keyarg_list -> epsilon
Rule 156   keyarg -> disjunction = disjunction

Terminals, with rules where they appear

%                    : 125
(                    : 135 140
)                    : 135 140
*                    : 123
+                    : 120
,                    : 100 100 151 154
-                    : 121 128
.                    : 144
/                    : 124
;                    : 87 88 90 91 92 93
<                    : 118
=                    : 81 94 95 156
>                    : 117
@                    : 131
ACTIONS_TIME         : 74
AND                  : 109
ARMS                 : 24
AT                   : 68
ATTACK               : 15
AVAILABLE_COMMANDS   : 76
BEHAVIOR             : 44 54
BREAK                : 91
CHANCE               : 32
COEXISTENCE          : 50
CONTINUE             : 90
COST                 : 11
DECIDE               : 45
DEFAULT              : 67
DEFEND               : 16
DNA                  : 36 41 53
EAT                  : 13
ELSE                 : 97 98
ENTITY               : 49
EPISODES             : 72
EQ                   : 113
EYES                 : 23
FALSE                : 149
FINS                 : 27
FUNC                 : 81
GE                   : 115
GENE                 : 6 7 8
HEALTH               : 20
HEIGHT               : 62
HORNS                : 25
HUNGER               : 21
ID                   : 11 19 36 40 41 44 51 53 54 55 66 67 68 77 81 82 135 145
IF                   : 96
IN                   : 30
INFINITE             : 59
INTDIV               : 126
LE                   : 116
LEGS                 : 22
LOOP                 : 100
MAX_ROUNDS           : 73
MOUTH                : 29
MOVE                 : 12
MUTATION             : 31
NEQ                  : 114
NOSE                 : 28
NOT                  : 111
NUMBER               : 11 30 30 30 32 33 61 62 68 69 72 73 74 137
OR                   : 107
ORGANISM             : 45 52 146
PICK                 : 17
REPR                 : 51 55
REPRODUCE            : 14
RETURN               : 92 93
SIMULATION           : 71 75 147
SIZE                 : 57
SMELL                : 26
SMELLING             : 9
STEP                 : 33
STOP                 : 75
STRING               : 138
SWIM                 : 18
TERRAIN              : 58
TIME                 : 45
TRUE                 : 148
VALUE                : 30
VISION               : 10
WIDTH                : 61
WORLD                : 56
[                    : 95 133 141
]                    : 95 133 141
^                    : 130
error                : 
newline              : 
{                    : 11 19 30 31 36 44 45 49 52 56 59 60 63 68 71 75 76 81 96 98 100 142
}                    : 11 19 30 31 36 44 45 49 52 56 59 60 63 68 71 75 76 81 96 98 100 142

Nonterminals, with rules where they appear

accessing            : 94 134 144
actgene              : 11
actgene_stmt         : 8
arg_list             : 135 141 151
atom                 : 130 131 136
behavior_stmt        : 42
behavior_stmt_list   : 1 42
bool                 : 50 139
command_list         : 76 77
comparison           : 111 112
conjunction          : 107 107 108
decide_stmt          : 44
disjunction          : 92 94 95 95 96 105 133 150 151 156 156
dna_elem             : 37
dna_elem_list        : 36 37
dna_stmt             : 34
dna_stmt_list        : 1 34
else_stmt            : 96
entity_org_stmt_list : 1 46 47
entity_stmt          : 46
entityprop           : 49 49
epsilon              : 5 35 38 43 48 65 70 78 80 83 85 99 102 104 106 152 155
expr                 : 113 113 114 114 115 115 116 116 117 117 118 118 119 120 121 140
factor               : 123 124 125 126 127 128 130 131
func_stmt            : 79
func_stmt_list       : 44 79
gene_stmt            : 4
gene_stmt_list       : 1 4
if_stmt              : 86 97
index_stmt           : 88
keyarg               : 153 154
keyarg_list          : 142 154
loop_condition       : 100
loop_init            : 100
loop_set             : 100
loop_stmt            : 89
mutationprop         : 31 31
naming               : 95 132 133
negation             : 109 109 110
organism_stmt        : 47
orgprop              : 52 52 52
param_list           : 81 82
percpgene            : 7 39
phygene              : 19
phygene_stmt         : 6
phygeneprop          : 19 19
power                : 129
program              : 
sim_stmt             : 1
simprop              : 71 71 71 71 71
stmt                 : 84
stmt_list            : 45 75 81 84 96 98 100
term                 : 120 121 122 123 124 125 126
terrainposn_list     : 68 69
terrainprop          : 64
terrainprop_list     : 63 64
test                 : 0
var_stmt             : 87 101 103
word                 : 143 144
world_stmt           : 1 3
worldprop            : 56 56
worldsize            : 57
worldsizeprop        : 59 59 60 60
worldterrain         : 58


state 0

    (0) S' -> . test
    (3) test -> . world_stmt
    (56) world_stmt -> . WORLD { worldprop worldprop }

    WORLD           shift and go to state 3

    test                           shift and go to state 1
    world_stmt                     shift and go to state 2

state 1

    (0) S' -> test .



state 2

    (3) test -> world_stmt .

    $end            reduce using rule 3 (test -> world_stmt .)


state 3

    (56) world_stmt -> WORLD . { worldprop worldprop }

    {               shift and go to state 4


state 4

    (56) world_stmt -> WORLD { . worldprop worldprop }
    (57) worldprop -> . SIZE worldsize
    (58) worldprop -> . TERRAIN worldterrain

    SIZE            shift and go to state 6
    TERRAIN         shift and go to state 7

    worldprop                      shift and go to state 5

state 5

    (56) world_stmt -> WORLD { worldprop . worldprop }
    (57) worldprop -> . SIZE worldsize
    (58) worldprop -> . TERRAIN worldterrain

    SIZE            shift and go to state 6
    TERRAIN         shift and go to state 7

    worldprop                      shift and go to state 8

state 6

    (57) worldprop -> SIZE . worldsize
    (59) worldsize -> . INFINITE { worldsizeprop worldsizeprop }
    (60) worldsize -> . { worldsizeprop worldsizeprop }

    INFINITE        shift and go to state 10
    {               shift and go to state 11

    worldsize                      shift and go to state 9

state 7

    (58) worldprop -> TERRAIN . worldterrain
    (63) worldterrain -> . { terrainprop_list }

    {               shift and go to state 13

    worldterrain                   shift and go to state 12

state 8

    (56) world_stmt -> WORLD { worldprop worldprop . }

    }               shift and go to state 14


state 9

    (57) worldprop -> SIZE worldsize .

    SIZE            reduce using rule 57 (worldprop -> SIZE worldsize .)
    TERRAIN         reduce using rule 57 (worldprop -> SIZE worldsize .)
    }               reduce using rule 57 (worldprop -> SIZE worldsize .)


state 10

    (59) worldsize -> INFINITE . { worldsizeprop worldsizeprop }

    {               shift and go to state 15


state 11

    (60) worldsize -> { . worldsizeprop worldsizeprop }
    (61) worldsizeprop -> . WIDTH NUMBER
    (62) worldsizeprop -> . HEIGHT NUMBER

    WIDTH           shift and go to state 17
    HEIGHT          shift and go to state 18

    worldsizeprop                  shift and go to state 16

state 12

    (58) worldprop -> TERRAIN worldterrain .

    SIZE            reduce using rule 58 (worldprop -> TERRAIN worldterrain .)
    TERRAIN         reduce using rule 58 (worldprop -> TERRAIN worldterrain .)
    }               reduce using rule 58 (worldprop -> TERRAIN worldterrain .)


state 13

    (63) worldterrain -> { . terrainprop_list }
    (64) terrainprop_list -> . terrainprop terrainprop_list
    (65) terrainprop_list -> . epsilon
    (66) terrainprop -> . ID
    (67) terrainprop -> . DEFAULT ID
    (68) terrainprop -> . ID AT { NUMBER terrainposn_list }
    (2) epsilon -> .

    ID              shift and go to state 22
    DEFAULT         shift and go to state 23
    }               reduce using rule 2 (epsilon -> .)

    terrainprop_list               shift and go to state 19
    terrainprop                    shift and go to state 20
    epsilon                        shift and go to state 21

state 14

    (56) world_stmt -> WORLD { worldprop worldprop } .

    $end            reduce using rule 56 (world_stmt -> WORLD { worldprop worldprop } .)


state 15

    (59) worldsize -> INFINITE { . worldsizeprop worldsizeprop }
    (61) worldsizeprop -> . WIDTH NUMBER
    (62) worldsizeprop -> . HEIGHT NUMBER

    WIDTH           shift and go to state 17
    HEIGHT          shift and go to state 18

    worldsizeprop                  shift and go to state 24

state 16

    (60) worldsize -> { worldsizeprop . worldsizeprop }
    (61) worldsizeprop -> . WIDTH NUMBER
    (62) worldsizeprop -> . HEIGHT NUMBER

    WIDTH           shift and go to state 17
    HEIGHT          shift and go to state 18

    worldsizeprop                  shift and go to state 25

state 17

    (61) worldsizeprop -> WIDTH . NUMBER

    NUMBER          shift and go to state 26


state 18

    (62) worldsizeprop -> HEIGHT . NUMBER

    NUMBER          shift and go to state 27


state 19

    (63) worldterrain -> { terrainprop_list . }

    }               shift and go to state 28


state 20

    (64) terrainprop_list -> terrainprop . terrainprop_list
    (64) terrainprop_list -> . terrainprop terrainprop_list
    (65) terrainprop_list -> . epsilon
    (66) terrainprop -> . ID
    (67) terrainprop -> . DEFAULT ID
    (68) terrainprop -> . ID AT { NUMBER terrainposn_list }
    (2) epsilon -> .

    ID              shift and go to state 22
    DEFAULT         shift and go to state 23
    }               reduce using rule 2 (epsilon -> .)

    terrainprop                    shift and go to state 20
    terrainprop_list               shift and go to state 29
    epsilon                        shift and go to state 21

state 21

    (65) terrainprop_list -> epsilon .

    }               reduce using rule 65 (terrainprop_list -> epsilon .)


state 22

    (66) terrainprop -> ID .
    (68) terrainprop -> ID . AT { NUMBER terrainposn_list }

    ID              reduce using rule 66 (terrainprop -> ID .)
    DEFAULT         reduce using rule 66 (terrainprop -> ID .)
    }               reduce using rule 66 (terrainprop -> ID .)
    AT              shift and go to state 30


state 23

    (67) terrainprop -> DEFAULT . ID

    ID              shift and go to state 31


state 24

    (59) worldsize -> INFINITE { worldsizeprop . worldsizeprop }
    (61) worldsizeprop -> . WIDTH NUMBER
    (62) worldsizeprop -> . HEIGHT NUMBER

    WIDTH           shift and go to state 17
    HEIGHT          shift and go to state 18

    worldsizeprop                  shift and go to state 32

state 25

    (60) worldsize -> { worldsizeprop worldsizeprop . }

    }               shift and go to state 33


state 26

    (61) worldsizeprop -> WIDTH NUMBER .

    WIDTH           reduce using rule 61 (worldsizeprop -> WIDTH NUMBER .)
    HEIGHT          reduce using rule 61 (worldsizeprop -> WIDTH NUMBER .)
    }               reduce using rule 61 (worldsizeprop -> WIDTH NUMBER .)


state 27

    (62) worldsizeprop -> HEIGHT NUMBER .

    WIDTH           reduce using rule 62 (worldsizeprop -> HEIGHT NUMBER .)
    HEIGHT          reduce using rule 62 (worldsizeprop -> HEIGHT NUMBER .)
    }               reduce using rule 62 (worldsizeprop -> HEIGHT NUMBER .)


state 28

    (63) worldterrain -> { terrainprop_list } .

    SIZE            reduce using rule 63 (worldterrain -> { terrainprop_list } .)
    TERRAIN         reduce using rule 63 (worldterrain -> { terrainprop_list } .)
    }               reduce using rule 63 (worldterrain -> { terrainprop_list } .)


state 29

    (64) terrainprop_list -> terrainprop terrainprop_list .

    }               reduce using rule 64 (terrainprop_list -> terrainprop terrainprop_list .)


state 30

    (68) terrainprop -> ID AT . { NUMBER terrainposn_list }

    {               shift and go to state 34


state 31

    (67) terrainprop -> DEFAULT ID .

    ID              reduce using rule 67 (terrainprop -> DEFAULT ID .)
    DEFAULT         reduce using rule 67 (terrainprop -> DEFAULT ID .)
    }               reduce using rule 67 (terrainprop -> DEFAULT ID .)


state 32

    (59) worldsize -> INFINITE { worldsizeprop worldsizeprop . }

    }               shift and go to state 35


state 33

    (60) worldsize -> { worldsizeprop worldsizeprop } .

    SIZE            reduce using rule 60 (worldsize -> { worldsizeprop worldsizeprop } .)
    TERRAIN         reduce using rule 60 (worldsize -> { worldsizeprop worldsizeprop } .)
    }               reduce using rule 60 (worldsize -> { worldsizeprop worldsizeprop } .)


state 34

    (68) terrainprop -> ID AT { . NUMBER terrainposn_list }

    NUMBER          shift and go to state 36


state 35

    (59) worldsize -> INFINITE { worldsizeprop worldsizeprop } .

    SIZE            reduce using rule 59 (worldsize -> INFINITE { worldsizeprop worldsizeprop } .)
    TERRAIN         reduce using rule 59 (worldsize -> INFINITE { worldsizeprop worldsizeprop } .)
    }               reduce using rule 59 (worldsize -> INFINITE { worldsizeprop worldsizeprop } .)


state 36

    (68) terrainprop -> ID AT { NUMBER . terrainposn_list }
    (69) terrainposn_list -> . NUMBER terrainposn_list
    (70) terrainposn_list -> . epsilon
    (2) epsilon -> .

    NUMBER          shift and go to state 37
    }               reduce using rule 2 (epsilon -> .)

    terrainposn_list               shift and go to state 38
    epsilon                        shift and go to state 39

state 37

    (69) terrainposn_list -> NUMBER . terrainposn_list
    (69) terrainposn_list -> . NUMBER terrainposn_list
    (70) terrainposn_list -> . epsilon
    (2) epsilon -> .

    NUMBER          shift and go to state 37
    }               reduce using rule 2 (epsilon -> .)

    terrainposn_list               shift and go to state 40
    epsilon                        shift and go to state 39

state 38

    (68) terrainprop -> ID AT { NUMBER terrainposn_list . }

    }               shift and go to state 41


state 39

    (70) terrainposn_list -> epsilon .

    }               reduce using rule 70 (terrainposn_list -> epsilon .)


state 40

    (69) terrainposn_list -> NUMBER terrainposn_list .

    }               reduce using rule 69 (terrainposn_list -> NUMBER terrainposn_list .)


state 41

    (68) terrainprop -> ID AT { NUMBER terrainposn_list } .

    ID              reduce using rule 68 (terrainprop -> ID AT { NUMBER terrainposn_list } .)
    DEFAULT         reduce using rule 68 (terrainprop -> ID AT { NUMBER terrainposn_list } .)
    }               reduce using rule 68 (terrainprop -> ID AT { NUMBER terrainposn_list } .)

